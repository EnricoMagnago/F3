@TIME_DOMAIN continuous
MODULE P(pid, id, turn)
DEFINE k := 2;
VAR
  location : {idle, wait, req, cs};
  x : clock;

INIT location = idle;
INIT x = 0;
INVAR (location = req) -> x<=k;

TRANS (turn != pid) -> (next(location) = location);
TRANS (turn = pid & location = idle) ->  next(location) = req
TRANS (turn = pid & location = req)  ->  next(location) = wait
TRANS (turn = pid & location = wait) -> (next(location) = idle | next(location) = cs);
TRANS (turn = pid & location = cs)   ->  next(location) = idle


TRANS (turn = pid) -> next(id) =
  case
    location = req & next(location) = wait : pid;
    location = cs  & next(location) = idle : 0;
    TRUE : id;
  esac;

TRANS next(x) =
  case
    turn = pid & ((location = idle & next(location = req)) |
                  (location = wait & next(location = idle)) |
                  (location = req & next(location = wait))): 0;
                  TRUE : x;
  esac;

TRANS (location = idle & next(location = req)) -> id = 0;
TRANS (location = req & next(location = wait)) -> x <= k;
TRANS (location = wait & next(location = idle)) -> x > k & id != pid;
TRANS (location = wait & next(location = cs)) -> x > k & id = pid;

MODULE main
VAR
  id : 0..24;
  turn : 1..24;
  P0 : P(1, id, turn);
  P1 : P(2, id, turn);
  P2 : P(3, id, turn);
  P3 : P(4, id, turn);
  P4 : P(5, id, turn);
  P5 : P(6, id, turn);
  P6 : P(7, id, turn);
  P7 : P(8, id, turn);
  P8 : P(9, id, turn);
  P9 : P(10, id, turn);
  P10 : P(11, id, turn);
  P11 : P(12, id, turn);
  P12 : P(13, id, turn);
  P13 : P(14, id, turn);
  P14 : P(15, id, turn);
  P15 : P(16, id, turn);
  P16 : P(17, id, turn);
  P17 : P(18, id, turn);
  P18 : P(19, id, turn);
  P19 : P(20, id, turn);
  P20 : P(21, id, turn);
  P21 : P(22, id, turn);
  P22 : P(23, id, turn);
  P23 : P(24, id, turn);


INIT id = 0;

LTLSPEC (G F P0.location = wait) -> (G F P0.location = cs);