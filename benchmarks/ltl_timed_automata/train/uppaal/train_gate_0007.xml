<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>
  const int a=2;
  const int b=5;
  const int c=1;
  const int d=2;
  const int e=1;
  typedef int[1, 7] id_t;
  chan exit_c;
  chan lower;
  chan raise;
  chan approach;
  chan g0_to_g1;
chan g2_to_g3;</declaration>
<template>
  <name>LTLTableau</name>
  <location id="id0">
  </location>
  <location id="id1">
	<name>f0</name>
  </location>
  <location id="id2">
	<name>f1</name>
	<urgent/>
  </location>
  <init ref="id0"/>
  <transition>
	<source ref="id2"/>
	<target ref="id0"/>
  </transition>
  <transition>
	<source ref="id1"/>
	<target ref="id2"/>
	<label kind="synchronisation">g2_to_g3?</label>
  </transition>
  <transition>
	<source ref="id1"/>
	<target ref="id1"/>
  </transition>
  <transition>
	<source ref="id0"/>
	<target ref="id1"/>
	<label kind="synchronisation">g0_to_g1?</label>
  </transition>
  <transition>
	<source ref="id0"/>
	<target ref="id0"/>
  </transition>
</template>
<template>
  <name>Gate</name>
  <declaration>clock y;</declaration>
  <location id="id3">
	<name>gate0</name>
  </location>
  <location id="id4">
	<name>gate1</name>
	<label kind="invariant">y &lt;= c</label>
  </location>
  <location id="id5">
	<name>gate2</name>
  </location>
  <location id="id6">
	<name>gate3</name>
	<label kind="invariant">y &lt;= d</label>
  </location>
  <location id="id7">
	<urgent/>
  </location>
  <location id="id8">
	<urgent/>
  </location>
  <init ref="id3"/>
  <transition>
	<source ref="id8"/>
	<target ref="id6"/>
	<label kind="synchronisation">g2_to_g3!</label>
  </transition>
  <transition>
	<source ref="id5"/>
	<target ref="id8"/>
	<label kind="synchronisation">raise?</label>
	<label kind="assignment">y := 0</label>
  </transition>
  <transition>
	<source ref="id7"/>
	<target ref="id4"/>
	<label kind="synchronisation">g0_to_g1!</label>
  </transition>
  <transition>
	<source ref="id3"/>
	<target ref="id7"/>
	<label kind="synchronisation">lower?</label>
	<label kind="assignment">y := 0</label>
  </transition>
  <transition>
	<source ref="id4"/>
	<target ref="id5"/>
	<label kind="guard">y &lt;= c</label>
  </transition>
  <transition>
	<source ref="id6"/>
	<target ref="id3"/>
	<label kind="guard">y &gt;= c &amp;&amp; y &lt;= d</label>
  </transition>
</template>
<template>
  <name>Controller</name>
  <declaration>clock z; int cnt;</declaration>
  <location id="id9">
	<name>controller0</name>
  </location>
  <location id="id10">
	<name>controller1</name>
	<label kind="invariant">z &lt;= e</label>
  </location>
  <location id="id11">
	<name>controller2</name>
  </location>
  <location id="id12">
	<name>controller3</name>
	<label kind="invariant">z &lt;= e</label>
  </location>
  <init ref="id9"/>
  <transition>
	<source ref="id9"/>
	<target ref="id10"/>
	<label kind="synchronisation">approach!</label>
	<label kind="assignment">z := 0, cnt := 1</label>
  </transition>
  <transition>
	<source ref="id10"/>
	<target ref="id10"/>
	<label kind="synchronisation">approach!</label>
	<label kind="assignment">cnt := cnt + 1</label>
  </transition>
  <transition>
	<source ref="id10"/>
	<target ref="id10"/>
	<label kind="synchronisation">exit_c!</label>
	<label kind="assignment">cnt := cnt - 1</label>
  </transition>
  <transition>
	<source ref="id11"/>
	<target ref="id11"/>
	<label kind="synchronisation">approach!</label>
	<label kind="assignment">cnt := cnt + 1</label>
  </transition>
  <transition>
	<source ref="id11"/>
	<target ref="id11"/>
	<label kind="guard">cnt &gt; 1</label>
	<label kind="synchronisation">exit_c!</label>
	<label kind="assignment">cnt := cnt - 1</label>
  </transition>
  <transition>
	<source ref="id11"/>
	<target ref="id12"/>
	<label kind="guard">cnt == 1</label>
	<label kind="synchronisation">exit_c!</label>
	<label kind="assignment">z := 0, cnt := 0</label>
  </transition>
  <transition>
	<source ref="id12"/>
	<target ref="id9"/>
	<label kind="guard">z &lt;= e</label>
	<label kind="synchronisation">raise!</label>
  </transition>
  <transition>
	<source ref="id12"/>
	<target ref="id11"/>
	<label kind="guard">z &lt;= e</label>
	<label kind="synchronisation">approach!</label>
	<label kind="assignment">cnt := cnt + 1</label>
  </transition>
  <transition>
	<source ref="id10"/>
	<target ref="id11"/>
	<label kind="guard">z == e</label>
	<label kind="synchronisation">lower!</label>
  </transition>
</template>
<template>
  <name>Train</name>
  <parameter>const id_t id</parameter>
  <declaration>clock x;</declaration>
  <location id="id13">
	<name>train0</name>
  </location>
  <location id="id14">
	<name>train1</name>
	<label kind="invariant">x &lt;= b</label>
  </location>
  <location id="id15">
	<name>train2</name>
	<label kind="invariant">x &lt;= b</label>
  </location>
  <location id="id16">
	<name>train3</name>
	<label kind="invariant">x &lt;= b</label>
  </location>
  <init ref="id13"/>
  <transition>
	<source ref="id15"/>
	<target ref="id16"/>
  </transition>
  <transition>
	<source ref="id16"/>
	<target ref="id13"/>
	<label kind="guard">x &lt;= b</label>
	<label kind="synchronisation">exit_c?</label>
  </transition>
  <transition>
	<source ref="id14"/>
	<target ref="id15"/>
	<label kind="guard">x &gt; a</label>
  </transition>
  <transition>
	<source ref="id13"/>
	<target ref="id14"/>
	<label kind="synchronisation">approach?</label>
	<label kind="assignment">x := 0</label>
  </transition>
</template>
<system>ltl = LTLTableau();
gate = Gate();
controller = Controller();
      train0 = Train(1);
      train1 = Train(2);
      train2 = Train(3);
      train3 = Train(4);
      train4 = Train(5);
      train5 = Train(6);
      train6 = Train(7);

system ltl, gate, controller, train0, train1, train2, train3, train4, train5, train6;</system>
</nta>
