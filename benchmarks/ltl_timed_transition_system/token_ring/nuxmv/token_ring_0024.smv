@TIME_DOMAIN continuous
MODULE main

  VAR
    mgr : TokenManager;
    total_transm_time : real;
      st0 : Station(mgr);
  st1 : Station(mgr);
  st2 : Station(mgr);
  st3 : Station(mgr);
  st4 : Station(mgr);
  st5 : Station(mgr);
  st6 : Station(mgr);
  st7 : Station(mgr);
  st8 : Station(mgr);
  st9 : Station(mgr);
  st10 : Station(mgr);
  st11 : Station(mgr);
  st12 : Station(mgr);
  st13 : Station(mgr);
  st14 : Station(mgr);
  st15 : Station(mgr);
  st16 : Station(mgr);
  st17 : Station(mgr);
  st18 : Station(mgr);
  st19 : Station(mgr);
  st20 : Station(mgr);
  st21 : Station(mgr);
  st22 : Station(mgr);
  st23 : Station(mgr);


    -- only 1 station moves at a time.
  TRANS st0.stutter | st1.stutter | st2.stutter | st3.stutter | st4.stutter | st5.stutter | st6.stutter | st7.stutter | st8.stutter | st9.stutter | st10.stutter | st11.stutter | st12.stutter | st13.stutter | st14.stutter | st15.stutter | st16.stutter | st17.stutter | st18.stutter | st19.stutter | st20.stutter | st21.stutter | st22.stutter | st23.stutter;
  -- not all stutter.
  TRANS !(mgr.stutter & st0.stutter & st1.stutter & st2.stutter & st3.stutter & st4.stutter & st5.stutter & st6.stutter & st7.stutter & st8.stutter & st9.stutter & st10.stutter & st11.stutter & st12.stutter & st13.stutter & st14.stutter & st15.stutter & st16.stutter & st17.stutter & st18.stutter & st19.stutter & st20.stutter & st21.stutter & st22.stutter & st23.stutter);
  -- sync stations and mgr.
  TRANS mgr.acquire <-> (st0.acquire | st1.acquire | st2.acquire | st3.acquire | st4.acquire | st5.acquire | st6.acquire | st7.acquire | st8.acquire | st9.acquire | st10.acquire | st11.acquire | st12.acquire | st13.acquire | st14.acquire | st15.acquire | st16.acquire | st17.acquire | st18.acquire | st19.acquire | st20.acquire | st21.acquire | st22.acquire | st23.acquire);
  TRANS mgr.release <-> (st0.release | st1.release | st2.release | st3.release | st4.release | st5.release | st6.release | st7.release | st8.release | st9.release | st10.release | st11.release | st12.release | st13.release | st14.release | st15.release | st16.release | st17.release | st18.release | st19.release | st20.release | st21.release | st22.release | st23.release);

  INIT total_transm_time = 0;
  TRANS (mgr.counting & next(mgr.idle)) -> next(total_transm_time) = total_transm_time + mgr.c;
  TRANS !(mgr.counting & next(mgr.idle)) -> next(total_transm_time) = total_transm_time;

  INVARSPEC ! (st0.transm & st1.transm);
  LTLSPEC (G F (mgr.counting & next(mgr.idle))) -> G F total_transm_time < 10;


MODULE TokenManager
  IVAR
    evt : {_acquire, _release, _stutter};
  VAR
    loc : {_idle, _counting};
    timeout : real;
    c : clock;

  DEFINE
    acquire := evt = _acquire;
    release := evt = _release;
    stutter := evt = _stutter;
    idle := loc = _idle;
    counting := loc = _counting;

  INIT c = 0 & idle & timeout = 0;
  INVAR counting -> c <= timeout;

  TRANS stutter -> next(loc) = loc & next(timeout) = timeout & next(c) = c;

  TRANS (!stutter & idle) -> (acquire & next(counting) & next(c) = 0);
  TRANS (!stutter & counting) -> (release & next(idle) & next(c) = 0 & next(timeout) = 0);


MODULE Station(mgr)
  IVAR
    evt : {_acquire, _release, _stutter};
  VAR
    loc : {_idle, _transm};
    req_time : real;

  DEFINE
    acquire := evt = _acquire;
    release := evt = _release;
    stutter := evt = _stutter;
    idle := loc = _idle;
    transm := loc = _transm;

  INIT idle;
  INVAR req_time > 0;

  TRANS stutter -> (next(loc) = loc & next(req_time) = req_time);
  TRANS (!stutter & idle) -> (acquire & next(transm) & next(mgr.timeout) = req_time & next(req_time) = req_time);
  TRANS (!stutter & transm) -> (release & mgr.c > 0 & next(idle));