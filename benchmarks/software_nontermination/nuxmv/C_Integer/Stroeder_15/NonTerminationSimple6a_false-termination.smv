-- int main()
-- {
--  int c, x;
--     c = 5;
--     x = __VERIFIER_nondet_int();
--  while (x >= 0) { // l0
--    x = x + c; // l1
--  }
--  return 0; // end
-- }


MODULE main
  VAR
    pc : {l0, l1, end};
    x : integer;
    c : integer;

  --control flow graph
  ASSIGN
    init(pc) := l0;
    next(pc) :=
      case
        pc = l0 & (x >= 0) : l1;
        pc = l0 & !(x >= 0) : end;
        pc = l1 : l0;
        TRUE : end;
      esac;

  DEFINE
    same_x := next(x) = x;
    same_c := next(c) = c;
    same := same_x & same_c;

  INIT c = 5;

  TRANS pc = l0 -> same;
  TRANS pc = l1 -> next(x) = x + c & same_c;
  TRANS pc = end -> same;

  LTLSPEC NAME TERMINATION := F pc = end;
