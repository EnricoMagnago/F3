-- int main()
-- {
--  int y = __VERIFIER_nondet_int();
--  while (y >= 0 && y <= 10) { // l0
--    y = (2*y + 1) / 2; // l1
--  }
--  return 0; // end
-- }

MODULE main
  VAR
    pc : {l0, l1, end};
    y : integer;

  -- control flow graph
  ASSIGN
    init(pc) := l0;
    next(pc) :=
      case
        pc = l0 & (y >= 0 & y <= 10): l1;
        pc = l0 & !(y >= 0 & y <= 10) : end;
        pc = l1 : l0;
        TRUE: end;
      esac;

  TRANS pc = l0 -> next(y) = y;
  TRANS pc = l1 -> next(y) = (2 * y + 1) / 2;
  TRANS pc = end -> next(y) = y;

  LTLSPEC NAME TERMINATION := F pc = end;
