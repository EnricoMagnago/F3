-- SMV encondig of P9.java from benchmarks of paper "Disproving termination with overapproximation".
MODULE main
  VAR
    x : integer;
    y : integer;
    pc : -1..7;

  -- cfg
  ASSIGN
  init(pc) := 0;
  next(pc) :=
    case
      pc = -1 : -1;
      pc = 0 & !(x >= 1) : -1;
      pc = 0 & x >= 1 : 1;
      pc = 1 & !(x >= 0) : -1;
      pc = 1 & x >= 0 : 2;
      pc = 2 & !(y >= 32) : -1;
      pc = 2 & y >= 32 : 3;
      pc = 3 : {4, 6};
      pc = 4 : 5;
      pc = 5 : 1;
      pc = 6 : 7;
      pc = 7 : 1;
    esac;

  -- constraints
  TRANS (pc = -1 & next(pc) = -1) -> (next(x) = x & next(y) = y);
  TRANS (pc = 0 & next(pc) = -1) -> (next(x) = x & next(y) = y);
  TRANS (pc = 0 & next(pc) = 1) -> (next(x) = x & next(y) = y);
  TRANS (pc = 1 & next(pc) = -1) -> (next(x) = x & next(y) = y);
  TRANS (pc = 1 & next(pc) = 2) -> (next(x) = x & next(y) = y);
  TRANS (pc = 2 & next(pc) = -1) -> (next(x) = x & next(y) = y);
  TRANS (pc = 2 & next(pc) = 3) -> (next(x) = x & next(y) = y);
  TRANS (pc = 3 & next(pc) = 4) -> (next(x) = x & next(y) = y);
  TRANS (pc = 3 & next(pc) = 6) -> (next(x) = x & next(y) = y);
  TRANS (pc = 4 & next(pc) = 5) -> (next(x) = 1 & next(y) = y);
  TRANS (pc = 5 & next(pc) = 1) -> (next(x) = x & next(y) = 15);
  TRANS (pc = 6 & next(pc) = 7) -> (              next(y) = x);
  TRANS (pc = 7 & next(pc) = 1) -> (next(x) = x & next(y) = y);

  LTLSPEC NAME BENCH := F pc = -1;