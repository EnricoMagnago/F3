-- SMV encondig of P3.java from benchmarks of paper "Disproving termination with overapproximation".
MODULE main
  VAR
    x : integer;
    y : integer;
    z : integer;
    pc : -1..10;

  -- cfg
  ASSIGN
  init(pc) := 0;
  next(pc) :=
    case
      pc = -1 : -1;
      pc = 0 & !(z >= 4) : -1;
      pc = 0 & z >= 4 : 1;
      pc = 1 : 2;
      pc = 2 & x >= 0 : 3;
      pc = 2 & !(x >= 0) : 4;
      pc = 3 : 5;
      pc = 4 : 5;
      pc = 5 & !(y >= 1) : -1;
      pc = 5 & y >= 1 : 6;
      pc = 6 & !(y <= 5) : -1;
      pc = 6 & y <= 5 : 7;
      pc = 7 & !(x >= 0) : 10;
      pc = 7 & x >= 0 : 8;
      pc = 8 : 9;
      pc = 9 : 7;
      pc = 10 : -1;
    esac;

  -- constraints
  TRANS (pc = -1 & next(pc) = -1) -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 0 & next(pc) = -1) -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 0 & next(pc) = 1)  -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 1 & next(pc) = 2)  -> (next(x) = x & next(y) = y & next(z) = z + 1);
  TRANS (pc = 2 & next(pc) = 3)  -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 2 & next(pc) = 4)  -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 3 & next(pc) = 5)  -> (next(x) = x & next(y) = y & next(z) = z + 1);
  TRANS (pc = 4 & next(pc) = 5)  -> (next(x) = x & next(y) = y & next(z) = z - 1);
  TRANS (pc = 5 & next(pc) = -1) -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 5 & next(pc) = 6)  -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 6 & next(pc) = -1) -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 6 & next(pc) = 7)  -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 7 & next(pc) = 10) -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 7 & next(pc) = 8)  -> (next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 8 & next(pc) = 9)  -> (next(x) = z*z - y*z & next(y) = y & next(z) = z);
  TRANS (pc = 9 & next(pc) = 7)  -> (next(x) = x & next(y) = y & next(z) = z + 1);
  TRANS (pc = 10 & next(pc) = -1) -> (next(x) = x & next(y) = y & next(z) = z - 1);

  LTLSPEC NAME BENCH := F pc = -1;