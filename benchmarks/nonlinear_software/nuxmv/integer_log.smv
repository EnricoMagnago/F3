-- SMV encondig of Pinteger_log.java from benchmarks of paper "Disproving termination with overapproximation".
MODULE main
  VAR
    n : integer;
    d : integer;
    log : integer;
    pc : -1..5;

  -- cfg
  ASSIGN
  init(pc) := 0;
  next(pc) :=
    case
      pc = -1 : -1;
      pc = 0 & !(n >= 1) : -1;
      pc = 0 & n >= 1 : 1;
      pc = 1 & !(d >= 2) : -1;
      pc = 1 & d >= 2 : 2;
      pc = 2 : 3;
      pc = 3 & !(n >= 0) : -1;
      pc = 3 & n >= 0 : 4;
      pc = 4 : 5;
      pc = 5 : 3;
    esac;

  -- constraints
  TRANS (pc = -1 & next(pc) = -1) -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 0 & next(pc) = -1) -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 0 & next(pc) = 1)  -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 1 & next(pc) = -1) -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 1 & next(pc) = 2)  -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 2 & next(pc) = 3)  -> (next(n) = n & next(d) = d & next(log) = 0);
  TRANS (pc = 3 & next(pc) = -1) -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 3 & next(pc) = 4)  -> (next(n) = n & next(d) = d & next(log) = log);
  TRANS (pc = 4 & next(pc) = 5)  -> (next(n) = n/d & next(d) = d & next(log) = log);
  TRANS (pc = 5 & next(pc) = 3)  -> (next(n) = n & next(d) = d & next(log) = log+1);

  LTLSPEC NAME BENCH := F pc = -1;