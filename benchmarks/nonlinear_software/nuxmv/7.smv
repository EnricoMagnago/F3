-- SMV encondig of P7.java from benchmarks of paper "Disproving termination with overapproximation".
MODULE main
  VAR
    w : integer;
    x : integer;
    y : integer;
    z : integer;
    pc : -1..15;

  -- cfg
  ASSIGN
  init(pc) := 0;
  next(pc) :=
    case
      pc = -1 : -1;
      pc = 0 & !(z >= 3) : -1;
      pc = 0 & z >= 3 : 1;
      pc = 1 & !( y >= 2) : -1;
      pc = 1 & y >= 2 : 2;
      pc = 2 : {3, 5};
      pc = 3 & !(z < -5) : -1;
      pc = 3 & z < -5 : 4;
      pc = 4 : -1;
      pc = 5 & !(w >= 2) : 13;
      pc = 5 & w >= 2 : 6;
      pc = 6 : {7, 9};
      pc = 7 & !(z < -5) : -1;
      pc = 7 & z < -5 : 8;
      pc = 8 : -1;
      pc = 9 & !(x >= 0) : 5;
      pc = 9 & x >= 0 : 10;
      pc = 10 : 11;
      pc = 11 : 12;
      pc = 12 : 9;
      pc = 13 : {-1, 14};
      pc = 14 & !(z < -5) : -1;
      pc = 14 & (z < -5) : 15;
      pc = 15 : -1;
    esac;

  -- constraints
  TRANS (pc = -1 & next(pc) = -1) -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 0 & next(pc) = -1)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 0 & next(pc) = 1)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 1 & next(pc) = -1)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 1 & next(pc) = 2)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 2 & next(pc) = 3)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 2 & next(pc) = 5)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 3 & next(pc) = -1)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 3 & next(pc) = 4)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 4 & next(pc) = -1)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 5 & next(pc) = 13)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 5 & next(pc) = 6)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 6 & next(pc) = 7)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 6 & next(pc) = 9)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 7 & next(pc) = -1)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 7 & next(pc) = 8)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 8 & next(pc) = -1)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 9 & next(pc) = 5)   -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 9 & next(pc) = 10)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 10 & next(pc) = 11) -> (next(w) = w & next(x) = z*y + w/y & next(y) = y & next(z) = z);
  TRANS (pc = 11 & next(pc) = 12) -> (next(w) = w & next(x) = x & next(y) = y+1 & next(z) = z);
  TRANS (pc = 12 & next(pc) = 9)  -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z+1);
  TRANS (pc = 13 & next(pc) = -1) -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 13 & next(pc) = 14) -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 14 & next(pc) = -1) -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 14 & next(pc) = 15) -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);
  TRANS (pc = 15 & next(pc) = -1) -> (next(w) = w & next(x) = x & next(y) = y & next(z) = z);

  LTLSPEC NAME BENCH := F pc = -1;