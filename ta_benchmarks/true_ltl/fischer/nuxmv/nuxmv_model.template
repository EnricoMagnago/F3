@TIME_DOMAIN continuous
MODULE P(pid, id, turn)
DEFINE k := 2;
VAR
  location : {{idle, wait, req, cs}};
  x : clock;

INIT location = idle;
INIT x = 0;
INVAR (location = req) -> x<=k;

TRANS (turn != pid) -> (next(location) = location);
TRANS (turn = pid & location = idle) ->  next(location) = req
TRANS (turn = pid & location = req)  ->  next(location) = wait
TRANS (turn = pid & location = wait) -> (next(location) = idle | next(location) = cs);
TRANS (turn = pid & location = cs)   ->  next(location) = idle


TRANS (turn = pid) -> next(id) =
  case
    location = req & next(location) = wait : pid;
    location = cs  & next(location) = idle : 0;
    TRUE : id;
  esac;

TRANS next(x) =
  case
    turn = pid & ((location = idle & next(location = req)) |
                  (location = wait & next(location = idle)) |
                  (location = req & next(location = wait))): 0;
                  TRUE : x;
  esac;

TRANS (location = idle & next(location = req)) -> id = 0;
TRANS (location = req & next(location = wait)) -> x <= k;
TRANS (location = wait & next(location = idle)) -> x > k & id != pid;
TRANS (location = wait & next(location = cs)) -> x > k & id = pid;

MODULE main
VAR
  id : 0..{proc_num};
  turn : 1..{proc_num};
{proc_decls}

INIT id = 0;

LTLSPEC {spec};
