
State

( Counter.initial ltl._id2 A0.S1 A1.S1 A2.S1 A3.S1 PC0.notready PC1.notready PC2.notready PC3.notready )
PC0.x-PC1.x<=0, PC0.x-PC2.x<=0, PC0.x-PC3.x<=0, PC1.x-PC0.x<=0, PC1.x-PC2.x<=0, PC1.x-PC3.x<=0, PC2.x-PC0.x<=0, PC2.x-PC1.x<=0, PC2.x-PC3.x<=0, PC3.x-PC0.x<=0, PC3.x-PC1.x<=0, PC3.x-PC2.x<=0 id=0 err_count=0 

Transitions:
  Counter.initial->Counter.initCount { id == 0, tau, id := 1 }

State

( Counter.initCount ltl._id2 A0.S1 A1.S1 A2.S1 A3.S1 PC0.notready PC1.notready PC2.notready PC3.notready )
PC0.x-PC1.x<=0, PC0.x-PC2.x<=0, PC0.x-PC3.x<=0, PC1.x-PC0.x<=0, PC1.x-PC2.x<=0, PC1.x-PC3.x<=0, PC2.x-PC0.x<=0, PC2.x-PC1.x<=0, PC2.x-PC3.x<=0, PC3.x-PC0.x<=0, PC3.x-PC1.x<=0, PC3.x-PC2.x<=0 id=1 err_count=0 

Transitions:
  ltl._id2->ltl.not_all_error { 1, tau, 1 }

State

( Counter.initCount ltl.not_all_error A0.S1 A1.S1 A2.S1 A3.S1 PC0.notready PC1.notready PC2.notready PC3.notready )
PC0.x-PC1.x<=0, PC0.x-PC2.x<=0, PC0.x-PC3.x<=0, PC1.x-PC0.x<=0, PC1.x-PC2.x<=0, PC1.x-PC3.x<=0, PC2.x-PC0.x<=0, PC2.x-PC1.x<=0, PC2.x-PC3.x<=0, PC3.x-PC0.x<=0, PC3.x-PC1.x<=0, PC3.x-PC2.x<=0 id=1 err_count=0 
real 1.03
user 0.06
sys 0.20
