
State

( RING.ring_to_counter ST0.station_z_idle ST1.station_z_idle ST2.station_z_idle ST3.station_z_idle )
RING.x<=0, RING.x-ST0.x<=0, RING.x-ST0.y<=0, RING.x-ST0.z<=0, RING.x-ST1.x<=0, RING.x-ST1.y<=0, RING.x-ST1.z<=0, RING.x-ST2.x<=0, RING.x-ST2.y<=0, RING.x-ST2.z<=0, RING.x-ST3.x<=0, RING.x-ST3.y<=0, RING.x-ST3.z<=0, ST0.x<=0, ST0.x-RING.x<=0, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=0, ST0.x-ST1.y<=0, ST0.x-ST1.z<=0, ST0.x-ST2.x<=0, ST0.x-ST2.y<=0, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=0, ST0.y-RING.x<=0, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=0, ST0.y-ST1.y<=0, ST0.y-ST1.z<=0, ST0.y-ST2.x<=0, ST0.y-ST2.y<=0, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=0, ST0.z-RING.x<=0, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=0, ST0.z-ST1.y<=0, ST0.z-ST1.z<=0, ST0.z-ST2.x<=0, ST0.z-ST2.y<=0, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=0, ST1.x-RING.x<=0, ST1.x-ST0.x<=0, ST1.x-ST0.y<=0, ST1.x-ST0.z<=0, ST1.x-ST1.y<=0, ST1.x-ST1.z<=0, ST1.x-ST2.x<=0, ST1.x-ST2.y<=0, ST1.x-ST2.z<=0, ST1.x-ST3.x<=0, ST1.x-ST3.y<=0, ST1.x-ST3.z<=0, ST1.y<=0, ST1.y-RING.x<=0, ST1.y-ST0.x<=0, ST1.y-ST0.y<=0, ST1.y-ST0.z<=0, ST1.y-ST1.x<=0, ST1.y-ST1.z<=0, ST1.y-ST2.x<=0, ST1.y-ST2.y<=0, ST1.y-ST2.z<=0, ST1.y-ST3.x<=0, ST1.y-ST3.y<=0, ST1.y-ST3.z<=0, ST1.z<=0, ST1.z-RING.x<=0, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=0, ST1.z-ST1.y<=0, ST1.z-ST2.x<=0, ST1.z-ST2.y<=0, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=0, ST2.x-RING.x<=0, ST2.x-ST0.x<=0, ST2.x-ST0.y<=0, ST2.x-ST0.z<=0, ST2.x-ST1.x<=0, ST2.x-ST1.y<=0, ST2.x-ST1.z<=0, ST2.x-ST2.y<=0, ST2.x-ST2.z<=0, ST2.x-ST3.x<=0, ST2.x-ST3.y<=0, ST2.x-ST3.z<=0, ST2.y<=0, ST2.y-RING.x<=0, ST2.y-ST0.x<=0, ST2.y-ST0.y<=0, ST2.y-ST0.z<=0, ST2.y-ST1.x<=0, ST2.y-ST1.y<=0, ST2.y-ST1.z<=0, ST2.y-ST2.x<=0, ST2.y-ST2.z<=0, ST2.y-ST3.x<=0, ST2.y-ST3.y<=0, ST2.y-ST3.z<=0, ST2.z<=0, ST2.z-RING.x<=0, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=0, ST2.z-ST1.y<=0, ST2.z-ST1.z<=0, ST2.z-ST2.x<=0, ST2.z-ST2.y<=0, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=0, ST3.x-RING.x<=0, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=0, ST3.x-ST1.y<=0, ST3.x-ST1.z<=0, ST3.x-ST2.x<=0, ST3.x-ST2.y<=0, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=0, ST3.y-RING.x<=0, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=0, ST3.y-ST1.y<=0, ST3.y-ST1.z<=0, ST3.y-ST2.x<=0, ST3.y-ST2.y<=0, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=0, ST3.z-RING.x<=0, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=0, ST3.z-ST1.y<=0, ST3.z-ST1.z<=0, ST3.z-ST2.x<=0, ST3.z-ST2.y<=0, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=0 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  RING.ring_to_counter->RING.ring_counter { x <= td, tt[counter]!, 1 }
  ST0.station_z_idle->ST0.station_z_sync { 1, tt[id]?, y := 0, x := 0 }

State

( RING.ring_counter ST0.station_z_sync ST1.station_z_idle ST2.station_z_idle ST3.station_z_idle )
RING.x<=20, RING.x-ST0.x<=0, RING.x-ST0.y<=0, RING.x-ST0.z<=0, RING.x-ST1.x<=0, RING.x-ST1.y<=0, RING.x-ST1.z<=0, RING.x-ST2.x<=0, RING.x-ST2.y<=0, RING.x-ST2.z<=0, RING.x-ST3.x<=0, RING.x-ST3.y<=0, RING.x-ST3.z<=0, ST0.x<=20, ST0.x-RING.x<=0, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=0, ST0.x-ST1.y<=0, ST0.x-ST1.z<=0, ST0.x-ST2.x<=0, ST0.x-ST2.y<=0, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=20, ST0.y-RING.x<=0, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=0, ST0.y-ST1.y<=0, ST0.y-ST1.z<=0, ST0.y-ST2.x<=0, ST0.y-ST2.y<=0, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=20, ST0.z-RING.x<=0, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=0, ST0.z-ST1.y<=0, ST0.z-ST1.z<=0, ST0.z-ST2.x<=0, ST0.z-ST2.y<=0, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=20, ST1.x-RING.x<=0, ST1.x-ST0.x<=0, ST1.x-ST0.y<=0, ST1.x-ST0.z<=0, ST1.x-ST1.y<=0, ST1.x-ST1.z<=0, ST1.x-ST2.x<=0, ST1.x-ST2.y<=0, ST1.x-ST2.z<=0, ST1.x-ST3.x<=0, ST1.x-ST3.y<=0, ST1.x-ST3.z<=0, ST1.y<=20, ST1.y-RING.x<=0, ST1.y-ST0.x<=0, ST1.y-ST0.y<=0, ST1.y-ST0.z<=0, ST1.y-ST1.x<=0, ST1.y-ST1.z<=0, ST1.y-ST2.x<=0, ST1.y-ST2.y<=0, ST1.y-ST2.z<=0, ST1.y-ST3.x<=0, ST1.y-ST3.y<=0, ST1.y-ST3.z<=0, ST1.z<=20, ST1.z-RING.x<=0, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=0, ST1.z-ST1.y<=0, ST1.z-ST2.x<=0, ST1.z-ST2.y<=0, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=20, ST2.x-RING.x<=0, ST2.x-ST0.x<=0, ST2.x-ST0.y<=0, ST2.x-ST0.z<=0, ST2.x-ST1.x<=0, ST2.x-ST1.y<=0, ST2.x-ST1.z<=0, ST2.x-ST2.y<=0, ST2.x-ST2.z<=0, ST2.x-ST3.x<=0, ST2.x-ST3.y<=0, ST2.x-ST3.z<=0, ST2.y<=20, ST2.y-RING.x<=0, ST2.y-ST0.x<=0, ST2.y-ST0.y<=0, ST2.y-ST0.z<=0, ST2.y-ST1.x<=0, ST2.y-ST1.y<=0, ST2.y-ST1.z<=0, ST2.y-ST2.x<=0, ST2.y-ST2.z<=0, ST2.y-ST3.x<=0, ST2.y-ST3.y<=0, ST2.y-ST3.z<=0, ST2.z<=20, ST2.z-RING.x<=0, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=0, ST2.z-ST1.y<=0, ST2.z-ST1.z<=0, ST2.z-ST2.x<=0, ST2.z-ST2.y<=0, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=20, ST3.x-RING.x<=0, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=0, ST3.x-ST1.y<=0, ST3.x-ST1.z<=0, ST3.x-ST2.x<=0, ST3.x-ST2.y<=0, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=20, ST3.y-RING.x<=0, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=0, ST3.y-ST1.y<=0, ST3.y-ST1.z<=0, ST3.y-ST2.x<=0, ST3.y-ST2.y<=0, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=20, ST3.z-RING.x<=0, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=0, ST3.z-ST1.y<=0, ST3.z-ST1.z<=0, ST3.z-ST2.x<=0, ST3.z-ST2.y<=0, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=0 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  ST0.station_z_sync->ST0.station_z_async { x >= SA && z < TRTT, tau, 1 }

State

( RING.ring_counter ST0.station_z_async ST1.station_z_idle ST2.station_z_idle ST3.station_z_idle )
RING.x>=20, ST0.x>=20, ST0.y>=20, ST0.z>=20, ST1.x>=20, ST1.y>=20, ST1.z>=20, ST2.x>=20, ST2.y>=20, ST2.z>=20, ST3.x>=20, ST3.y>=20, ST3.z>=20, RING.x<=220, RING.x-ST0.x<=0, RING.x-ST0.y<=0, RING.x-ST0.z<=0, RING.x-ST1.x<=0, RING.x-ST1.y<=0, RING.x-ST1.z<=0, RING.x-ST2.x<=0, RING.x-ST2.y<=0, RING.x-ST2.z<=0, RING.x-ST3.x<=0, RING.x-ST3.y<=0, RING.x-ST3.z<=0, ST0.x<=220, ST0.x-RING.x<=0, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=0, ST0.x-ST1.y<=0, ST0.x-ST1.z<=0, ST0.x-ST2.x<=0, ST0.x-ST2.y<=0, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=220, ST0.y-RING.x<=0, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=0, ST0.y-ST1.y<=0, ST0.y-ST1.z<=0, ST0.y-ST2.x<=0, ST0.y-ST2.y<=0, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=220, ST0.z-RING.x<=0, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=0, ST0.z-ST1.y<=0, ST0.z-ST1.z<=0, ST0.z-ST2.x<=0, ST0.z-ST2.y<=0, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=220, ST1.x-RING.x<=0, ST1.x-ST0.x<=0, ST1.x-ST0.y<=0, ST1.x-ST0.z<=0, ST1.x-ST1.y<=0, ST1.x-ST1.z<=0, ST1.x-ST2.x<=0, ST1.x-ST2.y<=0, ST1.x-ST2.z<=0, ST1.x-ST3.x<=0, ST1.x-ST3.y<=0, ST1.x-ST3.z<=0, ST1.y<=220, ST1.y-RING.x<=0, ST1.y-ST0.x<=0, ST1.y-ST0.y<=0, ST1.y-ST0.z<=0, ST1.y-ST1.x<=0, ST1.y-ST1.z<=0, ST1.y-ST2.x<=0, ST1.y-ST2.y<=0, ST1.y-ST2.z<=0, ST1.y-ST3.x<=0, ST1.y-ST3.y<=0, ST1.y-ST3.z<=0, ST1.z<=220, ST1.z-RING.x<=0, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=0, ST1.z-ST1.y<=0, ST1.z-ST2.x<=0, ST1.z-ST2.y<=0, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=220, ST2.x-RING.x<=0, ST2.x-ST0.x<=0, ST2.x-ST0.y<=0, ST2.x-ST0.z<=0, ST2.x-ST1.x<=0, ST2.x-ST1.y<=0, ST2.x-ST1.z<=0, ST2.x-ST2.y<=0, ST2.x-ST2.z<=0, ST2.x-ST3.x<=0, ST2.x-ST3.y<=0, ST2.x-ST3.z<=0, ST2.y<=220, ST2.y-RING.x<=0, ST2.y-ST0.x<=0, ST2.y-ST0.y<=0, ST2.y-ST0.z<=0, ST2.y-ST1.x<=0, ST2.y-ST1.y<=0, ST2.y-ST1.z<=0, ST2.y-ST2.x<=0, ST2.y-ST2.z<=0, ST2.y-ST3.x<=0, ST2.y-ST3.y<=0, ST2.y-ST3.z<=0, ST2.z<=220, ST2.z-RING.x<=0, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=0, ST2.z-ST1.y<=0, ST2.z-ST1.z<=0, ST2.z-ST2.x<=0, ST2.z-ST2.y<=0, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=220, ST3.x-RING.x<=0, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=0, ST3.x-ST1.y<=0, ST3.x-ST1.z<=0, ST3.x-ST2.x<=0, ST3.x-ST2.y<=0, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=220, ST3.y-RING.x<=0, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=0, ST3.y-ST1.y<=0, ST3.y-ST1.z<=0, ST3.y-ST2.x<=0, ST3.y-ST2.y<=0, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=220, ST3.z-RING.x<=0, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=0, ST3.z-ST1.y<=0, ST3.z-ST1.z<=0, ST3.z-ST2.x<=0, ST3.z-ST2.y<=0, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=0 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  ST0.station_z_async->ST0.station_y_idle { 1, rt[id]!, 1 }
  RING.ring_counter->RING.ring_to_counter { counter < N - 1, rt[counter]?, x := 0, counter := counter + 1 }

State

( RING.ring_to_counter ST0.station_y_idle ST1.station_z_idle ST2.station_z_idle ST3.station_z_idle )
ST0.x>=20, ST0.y>=20, ST0.z>=20, ST1.x>=20, ST1.y>=20, ST1.z>=20, ST2.x>=20, ST2.y>=20, ST2.z>=20, ST3.x>=20, ST3.y>=20, ST3.z>=20, RING.x<=0, RING.x-ST0.x<=-20, RING.x-ST0.y<=-20, RING.x-ST0.z<=-20, RING.x-ST1.x<=-20, RING.x-ST1.y<=-20, RING.x-ST1.z<=-20, RING.x-ST2.x<=-20, RING.x-ST2.y<=-20, RING.x-ST2.z<=-20, RING.x-ST3.x<=-20, RING.x-ST3.y<=-20, RING.x-ST3.z<=-20, ST0.x<=220, ST0.x-RING.x<=220, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=0, ST0.x-ST1.y<=0, ST0.x-ST1.z<=0, ST0.x-ST2.x<=0, ST0.x-ST2.y<=0, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=220, ST0.y-RING.x<=220, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=0, ST0.y-ST1.y<=0, ST0.y-ST1.z<=0, ST0.y-ST2.x<=0, ST0.y-ST2.y<=0, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=220, ST0.z-RING.x<=220, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=0, ST0.z-ST1.y<=0, ST0.z-ST1.z<=0, ST0.z-ST2.x<=0, ST0.z-ST2.y<=0, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=220, ST1.x-RING.x<=220, ST1.x-ST0.x<=0, ST1.x-ST0.y<=0, ST1.x-ST0.z<=0, ST1.x-ST1.y<=0, ST1.x-ST1.z<=0, ST1.x-ST2.x<=0, ST1.x-ST2.y<=0, ST1.x-ST2.z<=0, ST1.x-ST3.x<=0, ST1.x-ST3.y<=0, ST1.x-ST3.z<=0, ST1.y<=220, ST1.y-RING.x<=220, ST1.y-ST0.x<=0, ST1.y-ST0.y<=0, ST1.y-ST0.z<=0, ST1.y-ST1.x<=0, ST1.y-ST1.z<=0, ST1.y-ST2.x<=0, ST1.y-ST2.y<=0, ST1.y-ST2.z<=0, ST1.y-ST3.x<=0, ST1.y-ST3.y<=0, ST1.y-ST3.z<=0, ST1.z<=220, ST1.z-RING.x<=220, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=0, ST1.z-ST1.y<=0, ST1.z-ST2.x<=0, ST1.z-ST2.y<=0, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=220, ST2.x-RING.x<=220, ST2.x-ST0.x<=0, ST2.x-ST0.y<=0, ST2.x-ST0.z<=0, ST2.x-ST1.x<=0, ST2.x-ST1.y<=0, ST2.x-ST1.z<=0, ST2.x-ST2.y<=0, ST2.x-ST2.z<=0, ST2.x-ST3.x<=0, ST2.x-ST3.y<=0, ST2.x-ST3.z<=0, ST2.y<=220, ST2.y-RING.x<=220, ST2.y-ST0.x<=0, ST2.y-ST0.y<=0, ST2.y-ST0.z<=0, ST2.y-ST1.x<=0, ST2.y-ST1.y<=0, ST2.y-ST1.z<=0, ST2.y-ST2.x<=0, ST2.y-ST2.z<=0, ST2.y-ST3.x<=0, ST2.y-ST3.y<=0, ST2.y-ST3.z<=0, ST2.z<=220, ST2.z-RING.x<=220, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=0, ST2.z-ST1.y<=0, ST2.z-ST1.z<=0, ST2.z-ST2.x<=0, ST2.z-ST2.y<=0, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=220, ST3.x-RING.x<=220, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=0, ST3.x-ST1.y<=0, ST3.x-ST1.z<=0, ST3.x-ST2.x<=0, ST3.x-ST2.y<=0, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=220, ST3.y-RING.x<=220, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=0, ST3.y-ST1.y<=0, ST3.y-ST1.z<=0, ST3.y-ST2.x<=0, ST3.y-ST2.y<=0, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=220, ST3.z-RING.x<=220, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=0, ST3.z-ST1.y<=0, ST3.z-ST1.z<=0, ST3.z-ST2.x<=0, ST3.z-ST2.y<=0, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=1 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  RING.ring_to_counter->RING.ring_counter { x <= td, tt[counter]!, 1 }
  ST1.station_z_idle->ST1.station_z_sync { 1, tt[id]?, y := 0, x := 0 }

State

( RING.ring_counter ST0.station_y_idle ST1.station_z_sync ST2.station_z_idle ST3.station_z_idle )
ST0.x>=20, ST0.y>=20, ST0.z>=20, ST1.z>=20, ST2.x>=20, ST2.y>=20, ST2.z>=20, ST3.x>=20, ST3.y>=20, ST3.z>=20, RING.x<=20, RING.x-ST0.x<=-20, RING.x-ST0.y<=-20, RING.x-ST0.z<=-20, RING.x-ST1.x<=0, RING.x-ST1.y<=0, RING.x-ST1.z<=-20, RING.x-ST2.x<=-20, RING.x-ST2.y<=-20, RING.x-ST2.z<=-20, RING.x-ST3.x<=-20, RING.x-ST3.y<=-20, RING.x-ST3.z<=-20, ST0.x<=240, ST0.x-RING.x<=220, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=220, ST0.x-ST1.y<=220, ST0.x-ST1.z<=0, ST0.x-ST2.x<=0, ST0.x-ST2.y<=0, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=240, ST0.y-RING.x<=220, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=0, ST0.y-ST2.y<=0, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=240, ST0.z-RING.x<=220, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=220, ST0.z-ST1.y<=220, ST0.z-ST1.z<=0, ST0.z-ST2.x<=0, ST0.z-ST2.y<=0, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=20, ST1.x-RING.x<=0, ST1.x-ST0.x<=-20, ST1.x-ST0.y<=-20, ST1.x-ST0.z<=-20, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-20, ST1.x-ST2.x<=-20, ST1.x-ST2.y<=-20, ST1.x-ST2.z<=-20, ST1.x-ST3.x<=-20, ST1.x-ST3.y<=-20, ST1.x-ST3.z<=-20, ST1.y<=20, ST1.y-RING.x<=0, ST1.y-ST0.x<=-20, ST1.y-ST0.y<=-20, ST1.y-ST0.z<=-20, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-20, ST1.y-ST2.x<=-20, ST1.y-ST2.y<=-20, ST1.y-ST2.z<=-20, ST1.y-ST3.x<=-20, ST1.y-ST3.y<=-20, ST1.y-ST3.z<=-20, ST1.z<=240, ST1.z-RING.x<=220, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=0, ST1.z-ST2.y<=0, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=240, ST2.x-RING.x<=220, ST2.x-ST0.x<=0, ST2.x-ST0.y<=0, ST2.x-ST0.z<=0, ST2.x-ST1.x<=220, ST2.x-ST1.y<=220, ST2.x-ST1.z<=0, ST2.x-ST2.y<=0, ST2.x-ST2.z<=0, ST2.x-ST3.x<=0, ST2.x-ST3.y<=0, ST2.x-ST3.z<=0, ST2.y<=240, ST2.y-RING.x<=220, ST2.y-ST0.x<=0, ST2.y-ST0.y<=0, ST2.y-ST0.z<=0, ST2.y-ST1.x<=220, ST2.y-ST1.y<=220, ST2.y-ST1.z<=0, ST2.y-ST2.x<=0, ST2.y-ST2.z<=0, ST2.y-ST3.x<=0, ST2.y-ST3.y<=0, ST2.y-ST3.z<=0, ST2.z<=240, ST2.z-RING.x<=220, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=0, ST2.z-ST2.y<=0, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=240, ST3.x-RING.x<=220, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=220, ST3.x-ST1.y<=220, ST3.x-ST1.z<=0, ST3.x-ST2.x<=0, ST3.x-ST2.y<=0, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=240, ST3.y-RING.x<=220, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=220, ST3.y-ST1.y<=220, ST3.y-ST1.z<=0, ST3.y-ST2.x<=0, ST3.y-ST2.y<=0, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=240, ST3.z-RING.x<=220, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=0, ST3.z-ST2.y<=0, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=1 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  ST1.station_z_sync->ST1.station_y_idle { x >= SA && z >= TRTT, rt[id]!, 1 }
  RING.ring_counter->RING.ring_to_counter { counter < N - 1, rt[counter]?, x := 0, counter := counter + 1 }

State

( RING.ring_to_counter ST0.station_y_idle ST1.station_y_idle ST2.station_z_idle ST3.station_z_idle )
ST0.x>=220, ST0.y>=220, ST0.z>=220, ST1.x>=20, ST1.y>=20, ST1.z>=220, ST2.x>=220, ST2.y>=220, ST2.z>=220, ST3.x>=220, ST3.y>=220, ST3.z>=220, RING.x<=0, RING.x-ST0.x<=-220, RING.x-ST0.y<=-220, RING.x-ST0.z<=-220, RING.x-ST1.x<=-20, RING.x-ST1.y<=-20, RING.x-ST1.z<=-220, RING.x-ST2.x<=-220, RING.x-ST2.y<=-220, RING.x-ST2.z<=-220, RING.x-ST3.x<=-220, RING.x-ST3.y<=-220, RING.x-ST3.z<=-220, ST0.x<=240, ST0.x-RING.x<=240, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=220, ST0.x-ST1.y<=220, ST0.x-ST1.z<=0, ST0.x-ST2.x<=0, ST0.x-ST2.y<=0, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=240, ST0.y-RING.x<=240, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=0, ST0.y-ST2.y<=0, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=240, ST0.z-RING.x<=240, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=220, ST0.z-ST1.y<=220, ST0.z-ST1.z<=0, ST0.z-ST2.x<=0, ST0.z-ST2.y<=0, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=20, ST1.x-RING.x<=20, ST1.x-ST0.x<=-200, ST1.x-ST0.y<=-200, ST1.x-ST0.z<=-200, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-200, ST1.x-ST2.x<=-200, ST1.x-ST2.y<=-200, ST1.x-ST2.z<=-200, ST1.x-ST3.x<=-200, ST1.x-ST3.y<=-200, ST1.x-ST3.z<=-200, ST1.y<=20, ST1.y-RING.x<=20, ST1.y-ST0.x<=-200, ST1.y-ST0.y<=-200, ST1.y-ST0.z<=-200, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-200, ST1.y-ST2.x<=-200, ST1.y-ST2.y<=-200, ST1.y-ST2.z<=-200, ST1.y-ST3.x<=-200, ST1.y-ST3.y<=-200, ST1.y-ST3.z<=-200, ST1.z<=240, ST1.z-RING.x<=240, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=0, ST1.z-ST2.y<=0, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=240, ST2.x-RING.x<=240, ST2.x-ST0.x<=0, ST2.x-ST0.y<=0, ST2.x-ST0.z<=0, ST2.x-ST1.x<=220, ST2.x-ST1.y<=220, ST2.x-ST1.z<=0, ST2.x-ST2.y<=0, ST2.x-ST2.z<=0, ST2.x-ST3.x<=0, ST2.x-ST3.y<=0, ST2.x-ST3.z<=0, ST2.y<=240, ST2.y-RING.x<=240, ST2.y-ST0.x<=0, ST2.y-ST0.y<=0, ST2.y-ST0.z<=0, ST2.y-ST1.x<=220, ST2.y-ST1.y<=220, ST2.y-ST1.z<=0, ST2.y-ST2.x<=0, ST2.y-ST2.z<=0, ST2.y-ST3.x<=0, ST2.y-ST3.y<=0, ST2.y-ST3.z<=0, ST2.z<=240, ST2.z-RING.x<=240, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=0, ST2.z-ST2.y<=0, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=240, ST3.x-RING.x<=240, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=220, ST3.x-ST1.y<=220, ST3.x-ST1.z<=0, ST3.x-ST2.x<=0, ST3.x-ST2.y<=0, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=240, ST3.y-RING.x<=240, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=220, ST3.y-ST1.y<=220, ST3.y-ST1.z<=0, ST3.y-ST2.x<=0, ST3.y-ST2.y<=0, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=240, ST3.z-RING.x<=240, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=0, ST3.z-ST2.y<=0, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=2 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  RING.ring_to_counter->RING.ring_counter { x <= td, tt[counter]!, 1 }
  ST2.station_z_idle->ST2.station_z_sync { 1, tt[id]?, y := 0, x := 0 }

State

( RING.ring_counter ST0.station_y_idle ST1.station_y_idle ST2.station_z_sync ST3.station_z_idle )
ST0.x>=220, ST0.y>=220, ST0.z>=220, ST1.x>=20, ST1.y>=20, ST1.z>=220, ST2.z>=220, ST3.x>=220, ST3.y>=220, ST3.z>=220, RING.x<=20, RING.x-ST0.x<=-220, RING.x-ST0.y<=-220, RING.x-ST0.z<=-220, RING.x-ST1.x<=-20, RING.x-ST1.y<=-20, RING.x-ST1.z<=-220, RING.x-ST2.x<=0, RING.x-ST2.y<=0, RING.x-ST2.z<=-220, RING.x-ST3.x<=-220, RING.x-ST3.y<=-220, RING.x-ST3.z<=-220, ST0.x<=260, ST0.x-RING.x<=240, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=220, ST0.x-ST1.y<=220, ST0.x-ST1.z<=0, ST0.x-ST2.x<=240, ST0.x-ST2.y<=240, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=260, ST0.y-RING.x<=240, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=240, ST0.y-ST2.y<=240, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=260, ST0.z-RING.x<=240, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=220, ST0.z-ST1.y<=220, ST0.z-ST1.z<=0, ST0.z-ST2.x<=240, ST0.z-ST2.y<=240, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=40, ST1.x-RING.x<=20, ST1.x-ST0.x<=-200, ST1.x-ST0.y<=-200, ST1.x-ST0.z<=-200, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-200, ST1.x-ST2.x<=20, ST1.x-ST2.y<=20, ST1.x-ST2.z<=-200, ST1.x-ST3.x<=-200, ST1.x-ST3.y<=-200, ST1.x-ST3.z<=-200, ST1.y<=40, ST1.y-RING.x<=20, ST1.y-ST0.x<=-200, ST1.y-ST0.y<=-200, ST1.y-ST0.z<=-200, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-200, ST1.y-ST2.x<=20, ST1.y-ST2.y<=20, ST1.y-ST2.z<=-200, ST1.y-ST3.x<=-200, ST1.y-ST3.y<=-200, ST1.y-ST3.z<=-200, ST1.z<=260, ST1.z-RING.x<=240, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=240, ST1.z-ST2.y<=240, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=20, ST2.x-RING.x<=0, ST2.x-ST0.x<=-220, ST2.x-ST0.y<=-220, ST2.x-ST0.z<=-220, ST2.x-ST1.x<=-20, ST2.x-ST1.y<=-20, ST2.x-ST1.z<=-220, ST2.x-ST2.y<=0, ST2.x-ST2.z<=-220, ST2.x-ST3.x<=-220, ST2.x-ST3.y<=-220, ST2.x-ST3.z<=-220, ST2.y<=20, ST2.y-RING.x<=0, ST2.y-ST0.x<=-220, ST2.y-ST0.y<=-220, ST2.y-ST0.z<=-220, ST2.y-ST1.x<=-20, ST2.y-ST1.y<=-20, ST2.y-ST1.z<=-220, ST2.y-ST2.x<=0, ST2.y-ST2.z<=-220, ST2.y-ST3.x<=-220, ST2.y-ST3.y<=-220, ST2.y-ST3.z<=-220, ST2.z<=260, ST2.z-RING.x<=240, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=240, ST2.z-ST2.y<=240, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=260, ST3.x-RING.x<=240, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=220, ST3.x-ST1.y<=220, ST3.x-ST1.z<=0, ST3.x-ST2.x<=240, ST3.x-ST2.y<=240, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=260, ST3.y-RING.x<=240, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=220, ST3.y-ST1.y<=220, ST3.y-ST1.z<=0, ST3.y-ST2.x<=240, ST3.y-ST2.y<=240, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=260, ST3.z-RING.x<=240, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=240, ST3.z-ST2.y<=240, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=2 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  ST2.station_z_sync->ST2.station_y_idle { x >= SA && z >= TRTT, rt[id]!, 1 }
  RING.ring_counter->RING.ring_to_counter { counter < N - 1, rt[counter]?, x := 0, counter := counter + 1 }

State

( RING.ring_to_counter ST0.station_y_idle ST1.station_y_idle ST2.station_y_idle ST3.station_z_idle )
ST0.x>=240, ST0.y>=240, ST0.z>=240, ST1.x>=40, ST1.y>=40, ST1.z>=240, ST2.x>=20, ST2.y>=20, ST2.z>=240, ST3.x>=240, ST3.y>=240, ST3.z>=240, RING.x<=0, RING.x-ST0.x<=-240, RING.x-ST0.y<=-240, RING.x-ST0.z<=-240, RING.x-ST1.x<=-40, RING.x-ST1.y<=-40, RING.x-ST1.z<=-240, RING.x-ST2.x<=-20, RING.x-ST2.y<=-20, RING.x-ST2.z<=-240, RING.x-ST3.x<=-240, RING.x-ST3.y<=-240, RING.x-ST3.z<=-240, ST0.x<=260, ST0.x-RING.x<=260, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=220, ST0.x-ST1.y<=220, ST0.x-ST1.z<=0, ST0.x-ST2.x<=240, ST0.x-ST2.y<=240, ST0.x-ST2.z<=0, ST0.x-ST3.x<=0, ST0.x-ST3.y<=0, ST0.x-ST3.z<=0, ST0.y<=260, ST0.y-RING.x<=260, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=240, ST0.y-ST2.y<=240, ST0.y-ST2.z<=0, ST0.y-ST3.x<=0, ST0.y-ST3.y<=0, ST0.y-ST3.z<=0, ST0.z<=260, ST0.z-RING.x<=260, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=220, ST0.z-ST1.y<=220, ST0.z-ST1.z<=0, ST0.z-ST2.x<=240, ST0.z-ST2.y<=240, ST0.z-ST2.z<=0, ST0.z-ST3.x<=0, ST0.z-ST3.y<=0, ST0.z-ST3.z<=0, ST1.x<=40, ST1.x-RING.x<=40, ST1.x-ST0.x<=-200, ST1.x-ST0.y<=-200, ST1.x-ST0.z<=-200, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-200, ST1.x-ST2.x<=20, ST1.x-ST2.y<=20, ST1.x-ST2.z<=-200, ST1.x-ST3.x<=-200, ST1.x-ST3.y<=-200, ST1.x-ST3.z<=-200, ST1.y<=40, ST1.y-RING.x<=40, ST1.y-ST0.x<=-200, ST1.y-ST0.y<=-200, ST1.y-ST0.z<=-200, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-200, ST1.y-ST2.x<=20, ST1.y-ST2.y<=20, ST1.y-ST2.z<=-200, ST1.y-ST3.x<=-200, ST1.y-ST3.y<=-200, ST1.y-ST3.z<=-200, ST1.z<=260, ST1.z-RING.x<=260, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=240, ST1.z-ST2.y<=240, ST1.z-ST2.z<=0, ST1.z-ST3.x<=0, ST1.z-ST3.y<=0, ST1.z-ST3.z<=0, ST2.x<=20, ST2.x-RING.x<=20, ST2.x-ST0.x<=-220, ST2.x-ST0.y<=-220, ST2.x-ST0.z<=-220, ST2.x-ST1.x<=-20, ST2.x-ST1.y<=-20, ST2.x-ST1.z<=-220, ST2.x-ST2.y<=0, ST2.x-ST2.z<=-220, ST2.x-ST3.x<=-220, ST2.x-ST3.y<=-220, ST2.x-ST3.z<=-220, ST2.y<=20, ST2.y-RING.x<=20, ST2.y-ST0.x<=-220, ST2.y-ST0.y<=-220, ST2.y-ST0.z<=-220, ST2.y-ST1.x<=-20, ST2.y-ST1.y<=-20, ST2.y-ST1.z<=-220, ST2.y-ST2.x<=0, ST2.y-ST2.z<=-220, ST2.y-ST3.x<=-220, ST2.y-ST3.y<=-220, ST2.y-ST3.z<=-220, ST2.z<=260, ST2.z-RING.x<=260, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=240, ST2.z-ST2.y<=240, ST2.z-ST3.x<=0, ST2.z-ST3.y<=0, ST2.z-ST3.z<=0, ST3.x<=260, ST3.x-RING.x<=260, ST3.x-ST0.x<=0, ST3.x-ST0.y<=0, ST3.x-ST0.z<=0, ST3.x-ST1.x<=220, ST3.x-ST1.y<=220, ST3.x-ST1.z<=0, ST3.x-ST2.x<=240, ST3.x-ST2.y<=240, ST3.x-ST2.z<=0, ST3.x-ST3.y<=0, ST3.x-ST3.z<=0, ST3.y<=260, ST3.y-RING.x<=260, ST3.y-ST0.x<=0, ST3.y-ST0.y<=0, ST3.y-ST0.z<=0, ST3.y-ST1.x<=220, ST3.y-ST1.y<=220, ST3.y-ST1.z<=0, ST3.y-ST2.x<=240, ST3.y-ST2.y<=240, ST3.y-ST2.z<=0, ST3.y-ST3.x<=0, ST3.y-ST3.z<=0, ST3.z<=260, ST3.z-RING.x<=260, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=240, ST3.z-ST2.y<=240, ST3.z-ST2.z<=0, ST3.z-ST3.x<=0, ST3.z-ST3.y<=0 RING.counter=3 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  RING.ring_to_counter->RING.ring_counter { x <= td, tt[counter]!, 1 }
  ST3.station_z_idle->ST3.station_z_sync { 1, tt[id]?, y := 0, x := 0 }

State

( RING.ring_counter ST0.station_y_idle ST1.station_y_idle ST2.station_y_idle ST3.station_z_sync )
ST0.x>=240, ST0.y>=240, ST0.z>=240, ST1.x>=40, ST1.y>=40, ST1.z>=240, ST2.x>=20, ST2.y>=20, ST2.z>=240, ST3.z>=240, RING.x<=20, RING.x-ST0.x<=-240, RING.x-ST0.y<=-240, RING.x-ST0.z<=-240, RING.x-ST1.x<=-40, RING.x-ST1.y<=-40, RING.x-ST1.z<=-240, RING.x-ST2.x<=-20, RING.x-ST2.y<=-20, RING.x-ST2.z<=-240, RING.x-ST3.x<=0, RING.x-ST3.y<=0, RING.x-ST3.z<=-240, ST0.x<=280, ST0.x-RING.x<=260, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=220, ST0.x-ST1.y<=220, ST0.x-ST1.z<=0, ST0.x-ST2.x<=240, ST0.x-ST2.y<=240, ST0.x-ST2.z<=0, ST0.x-ST3.x<=260, ST0.x-ST3.y<=260, ST0.x-ST3.z<=0, ST0.y<=280, ST0.y-RING.x<=260, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=240, ST0.y-ST2.y<=240, ST0.y-ST2.z<=0, ST0.y-ST3.x<=260, ST0.y-ST3.y<=260, ST0.y-ST3.z<=0, ST0.z<=280, ST0.z-RING.x<=260, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=220, ST0.z-ST1.y<=220, ST0.z-ST1.z<=0, ST0.z-ST2.x<=240, ST0.z-ST2.y<=240, ST0.z-ST2.z<=0, ST0.z-ST3.x<=260, ST0.z-ST3.y<=260, ST0.z-ST3.z<=0, ST1.x<=60, ST1.x-RING.x<=40, ST1.x-ST0.x<=-200, ST1.x-ST0.y<=-200, ST1.x-ST0.z<=-200, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-200, ST1.x-ST2.x<=20, ST1.x-ST2.y<=20, ST1.x-ST2.z<=-200, ST1.x-ST3.x<=40, ST1.x-ST3.y<=40, ST1.x-ST3.z<=-200, ST1.y<=60, ST1.y-RING.x<=40, ST1.y-ST0.x<=-200, ST1.y-ST0.y<=-200, ST1.y-ST0.z<=-200, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-200, ST1.y-ST2.x<=20, ST1.y-ST2.y<=20, ST1.y-ST2.z<=-200, ST1.y-ST3.x<=40, ST1.y-ST3.y<=40, ST1.y-ST3.z<=-200, ST1.z<=280, ST1.z-RING.x<=260, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=240, ST1.z-ST2.y<=240, ST1.z-ST2.z<=0, ST1.z-ST3.x<=260, ST1.z-ST3.y<=260, ST1.z-ST3.z<=0, ST2.x<=40, ST2.x-RING.x<=20, ST2.x-ST0.x<=-220, ST2.x-ST0.y<=-220, ST2.x-ST0.z<=-220, ST2.x-ST1.x<=-20, ST2.x-ST1.y<=-20, ST2.x-ST1.z<=-220, ST2.x-ST2.y<=0, ST2.x-ST2.z<=-220, ST2.x-ST3.x<=20, ST2.x-ST3.y<=20, ST2.x-ST3.z<=-220, ST2.y<=40, ST2.y-RING.x<=20, ST2.y-ST0.x<=-220, ST2.y-ST0.y<=-220, ST2.y-ST0.z<=-220, ST2.y-ST1.x<=-20, ST2.y-ST1.y<=-20, ST2.y-ST1.z<=-220, ST2.y-ST2.x<=0, ST2.y-ST2.z<=-220, ST2.y-ST3.x<=20, ST2.y-ST3.y<=20, ST2.y-ST3.z<=-220, ST2.z<=280, ST2.z-RING.x<=260, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=240, ST2.z-ST2.y<=240, ST2.z-ST3.x<=260, ST2.z-ST3.y<=260, ST2.z-ST3.z<=0, ST3.x<=20, ST3.x-RING.x<=0, ST3.x-ST0.x<=-240, ST3.x-ST0.y<=-240, ST3.x-ST0.z<=-240, ST3.x-ST1.x<=-40, ST3.x-ST1.y<=-40, ST3.x-ST1.z<=-240, ST3.x-ST2.x<=-20, ST3.x-ST2.y<=-20, ST3.x-ST2.z<=-240, ST3.x-ST3.y<=0, ST3.x-ST3.z<=-240, ST3.y<=20, ST3.y-RING.x<=0, ST3.y-ST0.x<=-240, ST3.y-ST0.y<=-240, ST3.y-ST0.z<=-240, ST3.y-ST1.x<=-40, ST3.y-ST1.y<=-40, ST3.y-ST1.z<=-240, ST3.y-ST2.x<=-20, ST3.y-ST2.y<=-20, ST3.y-ST2.z<=-240, ST3.y-ST3.x<=0, ST3.y-ST3.z<=-240, ST3.z<=280, ST3.z-RING.x<=260, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=240, ST3.z-ST2.y<=240, ST3.z-ST2.z<=0, ST3.z-ST3.x<=260, ST3.z-ST3.y<=260 RING.counter=3 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  ST3.station_z_sync->ST3.station_y_idle { x >= SA && z >= TRTT, rt[id]!, 1 }
  RING.ring_counter->RING.ring_to_counter { counter == N - 1, rt[counter]?, x := 0, counter := 0 }

State

( RING.ring_to_counter ST0.station_y_idle ST1.station_y_idle ST2.station_y_idle ST3.station_y_idle )
ST0.x>=260, ST0.y>=260, ST0.z>=260, ST1.x>=60, ST1.y>=60, ST1.z>=260, ST2.x>=40, ST2.y>=40, ST2.z>=260, ST3.x>=20, ST3.y>=20, ST3.z>=260, RING.x<=0, RING.x-ST0.x<=-260, RING.x-ST0.y<=-260, RING.x-ST0.z<=-260, RING.x-ST1.x<=-60, RING.x-ST1.y<=-60, RING.x-ST1.z<=-260, RING.x-ST2.x<=-40, RING.x-ST2.y<=-40, RING.x-ST2.z<=-260, RING.x-ST3.x<=-20, RING.x-ST3.y<=-20, RING.x-ST3.z<=-260, ST0.x<=280, ST0.x-RING.x<=280, ST0.x-ST0.y<=0, ST0.x-ST0.z<=0, ST0.x-ST1.x<=220, ST0.x-ST1.y<=220, ST0.x-ST1.z<=0, ST0.x-ST2.x<=240, ST0.x-ST2.y<=240, ST0.x-ST2.z<=0, ST0.x-ST3.x<=260, ST0.x-ST3.y<=260, ST0.x-ST3.z<=0, ST0.y<=280, ST0.y-RING.x<=280, ST0.y-ST0.x<=0, ST0.y-ST0.z<=0, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=240, ST0.y-ST2.y<=240, ST0.y-ST2.z<=0, ST0.y-ST3.x<=260, ST0.y-ST3.y<=260, ST0.y-ST3.z<=0, ST0.z<=280, ST0.z-RING.x<=280, ST0.z-ST0.x<=0, ST0.z-ST0.y<=0, ST0.z-ST1.x<=220, ST0.z-ST1.y<=220, ST0.z-ST1.z<=0, ST0.z-ST2.x<=240, ST0.z-ST2.y<=240, ST0.z-ST2.z<=0, ST0.z-ST3.x<=260, ST0.z-ST3.y<=260, ST0.z-ST3.z<=0, ST1.x<=60, ST1.x-RING.x<=60, ST1.x-ST0.x<=-200, ST1.x-ST0.y<=-200, ST1.x-ST0.z<=-200, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-200, ST1.x-ST2.x<=20, ST1.x-ST2.y<=20, ST1.x-ST2.z<=-200, ST1.x-ST3.x<=40, ST1.x-ST3.y<=40, ST1.x-ST3.z<=-200, ST1.y<=60, ST1.y-RING.x<=60, ST1.y-ST0.x<=-200, ST1.y-ST0.y<=-200, ST1.y-ST0.z<=-200, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-200, ST1.y-ST2.x<=20, ST1.y-ST2.y<=20, ST1.y-ST2.z<=-200, ST1.y-ST3.x<=40, ST1.y-ST3.y<=40, ST1.y-ST3.z<=-200, ST1.z<=280, ST1.z-RING.x<=280, ST1.z-ST0.x<=0, ST1.z-ST0.y<=0, ST1.z-ST0.z<=0, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=240, ST1.z-ST2.y<=240, ST1.z-ST2.z<=0, ST1.z-ST3.x<=260, ST1.z-ST3.y<=260, ST1.z-ST3.z<=0, ST2.x<=40, ST2.x-RING.x<=40, ST2.x-ST0.x<=-220, ST2.x-ST0.y<=-220, ST2.x-ST0.z<=-220, ST2.x-ST1.x<=-20, ST2.x-ST1.y<=-20, ST2.x-ST1.z<=-220, ST2.x-ST2.y<=0, ST2.x-ST2.z<=-220, ST2.x-ST3.x<=20, ST2.x-ST3.y<=20, ST2.x-ST3.z<=-220, ST2.y<=40, ST2.y-RING.x<=40, ST2.y-ST0.x<=-220, ST2.y-ST0.y<=-220, ST2.y-ST0.z<=-220, ST2.y-ST1.x<=-20, ST2.y-ST1.y<=-20, ST2.y-ST1.z<=-220, ST2.y-ST2.x<=0, ST2.y-ST2.z<=-220, ST2.y-ST3.x<=20, ST2.y-ST3.y<=20, ST2.y-ST3.z<=-220, ST2.z<=280, ST2.z-RING.x<=280, ST2.z-ST0.x<=0, ST2.z-ST0.y<=0, ST2.z-ST0.z<=0, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=240, ST2.z-ST2.y<=240, ST2.z-ST3.x<=260, ST2.z-ST3.y<=260, ST2.z-ST3.z<=0, ST3.x<=20, ST3.x-RING.x<=20, ST3.x-ST0.x<=-240, ST3.x-ST0.y<=-240, ST3.x-ST0.z<=-240, ST3.x-ST1.x<=-40, ST3.x-ST1.y<=-40, ST3.x-ST1.z<=-240, ST3.x-ST2.x<=-20, ST3.x-ST2.y<=-20, ST3.x-ST2.z<=-240, ST3.x-ST3.y<=0, ST3.x-ST3.z<=-240, ST3.y<=20, ST3.y-RING.x<=20, ST3.y-ST0.x<=-240, ST3.y-ST0.y<=-240, ST3.y-ST0.z<=-240, ST3.y-ST1.x<=-40, ST3.y-ST1.y<=-40, ST3.y-ST1.z<=-240, ST3.y-ST2.x<=-20, ST3.y-ST2.y<=-20, ST3.y-ST2.z<=-240, ST3.y-ST3.x<=0, ST3.y-ST3.z<=-240, ST3.z<=280, ST3.z-RING.x<=280, ST3.z-ST0.x<=0, ST3.z-ST0.y<=0, ST3.z-ST0.z<=0, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=240, ST3.z-ST2.y<=240, ST3.z-ST2.z<=0, ST3.z-ST3.x<=260, ST3.z-ST3.y<=260 RING.counter=0 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 

Transitions:
  RING.ring_to_counter->RING.ring_counter { x <= td, tt[counter]!, 1 }
  ST0.station_y_idle->ST0.station_y_sync { 1, tt[id]?, z := 0, x := 0 }

State

( RING.ring_counter ST0.station_y_sync ST1.station_y_idle ST2.station_y_idle ST3.station_y_idle )
ST0.y>=260, ST1.x>=60, ST1.y>=60, ST1.z>=260, ST2.x>=40, ST2.y>=40, ST2.z>=260, ST3.x>=20, ST3.y>=20, ST3.z>=260, RING.x-ST0.x<=0, RING.x-ST0.y<=-260, RING.x-ST0.z<=0, RING.x-ST1.x<=-60, RING.x-ST1.y<=-60, RING.x-ST1.z<=-260, RING.x-ST2.x<=-40, RING.x-ST2.y<=-40, RING.x-ST2.z<=-260, RING.x-ST3.x<=-20, RING.x-ST3.y<=-20, RING.x-ST3.z<=-260, ST0.x-RING.x<=0, ST0.x-ST0.y<=-260, ST0.x-ST0.z<=0, ST0.x-ST1.x<=-60, ST0.x-ST1.y<=-60, ST0.x-ST1.z<=-260, ST0.x-ST2.x<=-40, ST0.x-ST2.y<=-40, ST0.x-ST2.z<=-260, ST0.x-ST3.x<=-20, ST0.x-ST3.y<=-20, ST0.x-ST3.z<=-260, ST0.y-RING.x<=280, ST0.y-ST0.x<=280, ST0.y-ST0.z<=280, ST0.y-ST1.x<=220, ST0.y-ST1.y<=220, ST0.y-ST1.z<=0, ST0.y-ST2.x<=240, ST0.y-ST2.y<=240, ST0.y-ST2.z<=0, ST0.y-ST3.x<=260, ST0.y-ST3.y<=260, ST0.y-ST3.z<=0, ST0.z-RING.x<=0, ST0.z-ST0.x<=0, ST0.z-ST0.y<=-260, ST0.z-ST1.x<=-60, ST0.z-ST1.y<=-60, ST0.z-ST1.z<=-260, ST0.z-ST2.x<=-40, ST0.z-ST2.y<=-40, ST0.z-ST2.z<=-260, ST0.z-ST3.x<=-20, ST0.z-ST3.y<=-20, ST0.z-ST3.z<=-260, ST1.x-RING.x<=60, ST1.x-ST0.x<=60, ST1.x-ST0.y<=-200, ST1.x-ST0.z<=60, ST1.x-ST1.y<=0, ST1.x-ST1.z<=-200, ST1.x-ST2.x<=20, ST1.x-ST2.y<=20, ST1.x-ST2.z<=-200, ST1.x-ST3.x<=40, ST1.x-ST3.y<=40, ST1.x-ST3.z<=-200, ST1.y-RING.x<=60, ST1.y-ST0.x<=60, ST1.y-ST0.y<=-200, ST1.y-ST0.z<=60, ST1.y-ST1.x<=0, ST1.y-ST1.z<=-200, ST1.y-ST2.x<=20, ST1.y-ST2.y<=20, ST1.y-ST2.z<=-200, ST1.y-ST3.x<=40, ST1.y-ST3.y<=40, ST1.y-ST3.z<=-200, ST1.z-RING.x<=280, ST1.z-ST0.x<=280, ST1.z-ST0.y<=0, ST1.z-ST0.z<=280, ST1.z-ST1.x<=220, ST1.z-ST1.y<=220, ST1.z-ST2.x<=240, ST1.z-ST2.y<=240, ST1.z-ST2.z<=0, ST1.z-ST3.x<=260, ST1.z-ST3.y<=260, ST1.z-ST3.z<=0, ST2.x-RING.x<=40, ST2.x-ST0.x<=40, ST2.x-ST0.y<=-220, ST2.x-ST0.z<=40, ST2.x-ST1.x<=-20, ST2.x-ST1.y<=-20, ST2.x-ST1.z<=-220, ST2.x-ST2.y<=0, ST2.x-ST2.z<=-220, ST2.x-ST3.x<=20, ST2.x-ST3.y<=20, ST2.x-ST3.z<=-220, ST2.y-RING.x<=40, ST2.y-ST0.x<=40, ST2.y-ST0.y<=-220, ST2.y-ST0.z<=40, ST2.y-ST1.x<=-20, ST2.y-ST1.y<=-20, ST2.y-ST1.z<=-220, ST2.y-ST2.x<=0, ST2.y-ST2.z<=-220, ST2.y-ST3.x<=20, ST2.y-ST3.y<=20, ST2.y-ST3.z<=-220, ST2.z-RING.x<=280, ST2.z-ST0.x<=280, ST2.z-ST0.y<=0, ST2.z-ST0.z<=280, ST2.z-ST1.x<=220, ST2.z-ST1.y<=220, ST2.z-ST1.z<=0, ST2.z-ST2.x<=240, ST2.z-ST2.y<=240, ST2.z-ST3.x<=260, ST2.z-ST3.y<=260, ST2.z-ST3.z<=0, ST3.x-RING.x<=20, ST3.x-ST0.x<=20, ST3.x-ST0.y<=-240, ST3.x-ST0.z<=20, ST3.x-ST1.x<=-40, ST3.x-ST1.y<=-40, ST3.x-ST1.z<=-240, ST3.x-ST2.x<=-20, ST3.x-ST2.y<=-20, ST3.x-ST2.z<=-240, ST3.x-ST3.y<=0, ST3.x-ST3.z<=-240, ST3.y-RING.x<=20, ST3.y-ST0.x<=20, ST3.y-ST0.y<=-240, ST3.y-ST0.z<=20, ST3.y-ST1.x<=-40, ST3.y-ST1.y<=-40, ST3.y-ST1.z<=-240, ST3.y-ST2.x<=-20, ST3.y-ST2.y<=-20, ST3.y-ST2.z<=-240, ST3.y-ST3.x<=0, ST3.y-ST3.z<=-240, ST3.z-RING.x<=280, ST3.z-ST0.x<=280, ST3.z-ST0.y<=0, ST3.z-ST0.z<=280, ST3.z-ST1.x<=220, ST3.z-ST1.y<=220, ST3.z-ST1.z<=0, ST3.z-ST2.x<=240, ST3.z-ST2.y<=240, ST3.z-ST2.z<=0, ST3.z-ST3.x<=260, ST3.z-ST3.y<=260 RING.counter=0 ST0.id=0 ST1.id=1 ST2.id=2 ST3.id=3 
real 1.02
user 0.07
sys 0.20
