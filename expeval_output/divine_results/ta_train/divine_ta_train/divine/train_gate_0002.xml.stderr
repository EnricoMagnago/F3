 input: /home/magnago/benchmarks/ltl_timed_automata/train/divine/train_gate_0002.xml
 property { 0 }: G ((g0 && X g1) -> F (g2 && X g3))
 ------------------- OWCTY -------------------
 initialise...		    |S| = 382
 ---------------- iteration 1 ---------------- 
 reachability...	    |S| = 964
 elimination & reset...	    |S| = 294
 ---------------- iteration 2 ---------------- 
 reachability...	    |S| = 764
 elimination & reset...	    |S| = 294
 ============================================= 
           The property DOES NOT hold      
 ============================================= 
 obtaining counterexample...      done
 generating counterexample...      
===== Trace from initial =====

train0 = train0, train1 = train0, gate = gate0, controller = controller0, prop = 0
controller.cnt = 0

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train0, gate = gate0, controller = controller1, prop = 1
controller.cnt = 1
train0.x ≤ 1	controller.z ≤ 1
train0.x-train1.x ≤ 1	train0.x-gate.y ≤ 1
0 ≤ train0.x-controller.z ≤ 0	train0.x-_aux ≤ 0
-1 ≤ train1.x-controller.z	-1 ≤ gate.y-controller.z
controller.z-_aux ≤ 0	
URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train0, gate = gate1, controller = controller2, prop = 5
controller.cnt = 1
1 ≤ train0.x ≤ 2	_aux ≤ 0
train0.x-train1.x ≤ 2	train0.x-gate.y ≤ 1
train0.x-controller.z ≤ 2	1 ≤ train0.x-_aux ≤ 2
0 ≤ train1.x-_aux	0 ≤ gate.y-_aux
0 ≤ controller.z-_aux	
URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train0, gate = gate2, controller = controller2, prop = 6
controller.cnt = 1
2 ≤ train0.x	_aux ≤ 0
2 ≤ train0.x-_aux	0 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train1, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
3 ≤ train0.x	1 ≤ train1.x
_aux ≤ 0	2 ≤ train0.x-train1.x
3 ≤ train0.x-_aux	1 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train2, train1 = train1, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
4 ≤ train0.x	2 ≤ train1.x
_aux ≤ 0	2 ≤ train0.x-train1.x
4 ≤ train0.x-_aux	2 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train3, train1 = train1, gate = gate2, controller = controller2, prop = 4
controller.cnt = 2
4 ≤ train0.x	2 ≤ train1.x
_aux < 1	2 ≤ train0.x-train1.x
4 ≤ train0.x-_aux	2 ≤ train1.x-_aux
-1 < gate.y-_aux	-1 < controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train3, train1 = train2, gate = gate2, controller = controller2, prop = 4
controller.cnt = 2
4 < train0.x	2 < train1.x
_aux < 1	4 ≤ train0.x-_aux
2 ≤ train1.x-_aux	-1 < gate.y-_aux
-1 < controller.z-_aux	
URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train3, train1 = train3, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
5 ≤ train0.x	3 ≤ train1.x
_aux ≤ 0	5 ≤ train0.x-_aux
3 ≤ train1.x-_aux	0 ≤ gate.y-_aux
0 ≤ controller.z-_aux	
URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\



===== The cycle =====

train0 = train0, train1 = train3, gate = gate2, controller = controller2, prop = 6
controller.cnt = 1
4 ≤ train1.x	_aux ≤ 0
0 ≤ train0.x-_aux	4 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train3, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
1 ≤ train0.x ≤ 1	5 ≤ train1.x
_aux ≤ 0	train0.x-train1.x ≤ -4
train0.x-gate.y ≤ 1	train0.x-controller.z ≤ 1
1 ≤ train0.x-_aux ≤ 1	5 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train0, gate = gate2, controller = controller2, prop = 6
controller.cnt = 1
2 ≤ train0.x	_aux ≤ 0
2 ≤ train0.x-_aux	0 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train1, train1 = train1, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
3 ≤ train0.x	1 ≤ train1.x
_aux ≤ 0	2 ≤ train0.x-train1.x
3 ≤ train0.x-_aux	1 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train2, train1 = train1, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
4 ≤ train0.x	2 ≤ train1.x
_aux ≤ 0	2 ≤ train0.x-train1.x
4 ≤ train0.x-_aux	2 ≤ train1.x-_aux
0 ≤ gate.y-_aux	0 ≤ controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train3, train1 = train1, gate = gate2, controller = controller2, prop = 4
controller.cnt = 2
4 ≤ train0.x	2 ≤ train1.x
_aux < 1	2 ≤ train0.x-train1.x
4 ≤ train0.x-_aux	2 ≤ train1.x-_aux
-1 < gate.y-_aux	-1 < controller.z-_aux

URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train3, train1 = train2, gate = gate2, controller = controller2, prop = 4
controller.cnt = 2
4 < train0.x	2 < train1.x
_aux < 1	4 ≤ train0.x-_aux
2 ≤ train1.x-_aux	-1 < gate.y-_aux
-1 < controller.z-_aux	
URA state: <=0	<=0	<=0	<=0	<=0	<=0	\
<INF	<=0	<INF	<INF	<INF	<INF	\
<INF	<INF	<=0	<INF	<INF	<INF	\
<INF	<INF	<INF	<=0	<INF	<INF	\
<INF	<INF	<INF	<INF	<=0	<INF	\
<INF	<INF	<INF	<INF	<INF	<=0	\


train0 = train3, train1 = train3, gate = gate2, controller = controller2, prop = 6
controller.cnt = 2
5 ≤ train0.x	3 ≤ train1.x
_aux ≤ 0	5 ≤ train0.x-_aux
3 ≤ train1.x-_aux	0 ≤ gate.y-_aux
0 ≤ controller.z-_aux	
URA st