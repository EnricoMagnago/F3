

run 1/1: `fischer_0004`

	Found non-termination argument:
	Do states 4..4 while (((p0_x + p3_x + p1_x + delta + -703/39) - (p2_x * 2.0)) < 0.0)
	State 4
		p3_l1 = False
		p3_l0 = False
		_diverge_delta = 5/2
		id = 1
		turn = 3
		p1_l0 = False
		p0_l0 = True
		p0_l1 = False
		p1_l1 = False
		p2_l0 = False
		p2_l1 = False
		_J515 = True
		_J521 = True
		_J526 = True
		_J532 = True
		_J539 = True
		_J545 = True
		_EL_U_478 = True
		_EL_U_480 = False
		_EL_U_482 = True
		_EL_U_484 = False
		_EL_U_486 = False
		_EL_U_488 = True
		((-1.0 * p3_x) < -2.0)
		((-1.0 * p2_x) < -2.0)
		((-1.0 * p1_x) < -2.0)
		(delta = 5/2)
		((-1.0 * p0_x) < -2.0)
		((-1.0 * delta) < 0.0)
	Trans 4 -- 4
		_x_p2_x : (p2_x + delta)
		_x_delta : 5/2
		_x_p1_x : (p1_x + delta)
		_x_p3_x : (p3_x + delta)
		_x_p0_x : (p0_x + delta)
	End do-while
	State 4
		p3_l1 = False
		p3_l0 = False
		_diverge_delta = 5/2
		id = 1
		turn = 3
		p1_l0 = False
		p0_l0 = True
		p0_l1 = False
		p1_l1 = False
		p2_l0 = False
		p2_l1 = False
		_J515 = True
		_J521 = True
		_J526 = True
		_J532 = True
		_J539 = True
		_J545 = True
		_EL_U_478 = True
		_EL_U_480 = False
		_EL_U_482 = True
		_EL_U_484 = False
		_EL_U_486 = False
		_EL_U_488 = True
		(((p2_x * 2.0) + (-1.0 * delta) + (-1.0 * p1_x) + (-1.0 * p3_x) + (-1.0 * p0_x) + 703/39) <= 0.0)
		(((-1.0 * p0_x) + (-1.0 * delta)) < 1/2)
		(((-1.0 * p3_x) + (-1.0 * delta)) < 1/2)
		(delta = 5/2)
		(((-1.0 * p2_x) + (-1.0 * delta)) < 1/2)
		(((-1.0 * p1_x) + (-1.0 * delta)) < 1/2)
	Trans 4 -- 5
		_x_p2_x = (p2_x + delta)
		_x_delta = 5/2
		_x_p1_x = (p1_x + delta)
		_x_p3_x = (p3_x + delta)
		_x_p0_x = (p0_x + delta)
	State 5
		p3_l1 = False
		p3_l0 = False
		_diverge_delta = 5/2
		id = 1
		turn = 3
		p1_l0 = False
		p0_l0 = True
		p0_l1 = False
		p1_l1 = False
		p2_l0 = False
		p2_l1 = False
		_J515 = False
		_J521 = False
		_J526 = False
		_J532 = False
		_J539 = False
		_J545 = False
		_EL_U_478 = True
		_EL_U_480 = False
		_EL_U_482 = True
		_EL_U_484 = False
		_EL_U_486 = False
		_EL_U_488 = True
	Trans 5 -- 6
		_x_p2_x = (p2_x + delta)
		_x_delta = 5/2
		_x_p1_x = (p1_x + delta)
		_x_p3_x = (p3_x + delta)
		_x_p0_x = (p0_x + delta)
	starting from: {delta: 5/2, p3_l1: False, p3_l0: False, _diverge_delta: 5/2, p1_x: 5.0, p3_x: 5.0, id: 1, turn: 3, p0_x: 5.0, p1_l0: False, p0_l0: True, p0_l1: False, p1_l1: False, p2_x: 5.0, p2_l0: False, p2_l1: False, _J515: True, _J521: True, _J526: True, _J532: True, _J539: True, _J545: True, _EL_U_478: True, _EL_U_480: False, _EL_U_482: True, _EL_U_484: False, _EL_U_486: False, _EL_U_488: True}

end of `fischer_0004`: SUCCESS in 1.0483026504516602s
